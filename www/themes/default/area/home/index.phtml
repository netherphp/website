
<div class="PageSection SplashSection SplashGraphicHome"><div>
	<div class="DivTwoColumn">
		<div>
			<h2>NPF</h2>
			<p>Nether PHP Framework</p>
			<p><a href="/npf/" class="Button">Learn More...</a></p>
		</div>
		<div>
			<h2>NUI</h2>
			<p>Nether UI (Javascript)</p>
			<p><a href="/nui/" class="Button">Learn More...</a></p>
		</div>
	</div>
</div></div>

<div class="PageSection PromoSection"><div>
	<p>Often as developers we deal with a lot of third party projects that we then duct tape together to try and form a product with as little <em>&quot;effort&quot;</em> as possible. The problem is the more junk you bolt onto your project that was not designed to work together the harder the app becomes to maintain - or heaven forbid - learn to use.</p>
	<p>Developers also fail quite often. While creating viable projects that do what they are advertised - how hard to use are these projects? Why would this function require 6 arguments when all I want is for it to do one thing? Life should be easy.</p>
	<p>These two projects are the brainchild of a new methodology I am taking to programming. After producing a new feature I stop and analyise the APIs involved, asking myself things like <em>&quot;why did I have to do all this to use this feature?&quot;</em> - if the answer I give myself is ANYTHING except <em>&quot;because that is as simple as it could be&quot;</em>, then I go back to work and make it simpiler. It is NOT about magic blackbox code, rather it is about code that makes the computer do its one job - work for you.</p>
	<p>The goal of this framework is to handle a lot of the mundane work that goes into web development, leaving it clean to write your own reusable code instead of strapping on a bunch of packages you've never used. This may sound like a not-invented-here-lomaniac attitude, but in reality it is more i-want-to-write-code-not-read-documents-for-days mindset.</p>
	<p>Take for example PHP's PDO extension. Have you ever tried to use it? Why can't I bind multiple named arguments at once? There isn't a single thing about PDO that makes me stop and think <em>&quot;this is an amazing piece of engineering&quot;</em>. I consider this a problem, and I consider myself a problem solver. In the Nether Database module I have attempted to solve everything about DB work that has pissed me off over the years. This is just one example. At the end of the day, all of us will give in at one point and push some sucky code. I sure didn't nail it first try.</p>
	<p>I invite you to try my code (all of which is open sourced under the BSD 3-Clause licence) and if you find something that isn't easy enough, I want you to call me out on it. I also understand that without documentation for the kitchen sink adoption rates may be slow. I'm working on it. But here is the thing - I don't care if Nether powers half the web or not. What I really want is for developers to be more in tune with how their own projects work and create APIs that actually make sense. I can only rant on Twitter so hard - so now I intend to set an example.</p>
	<p>One last note. I am also of strong conviction that you should eat what you preach. This entire website is powered by NPF and NUI with the <a href="https://github.com/netherphp/website">source of it available on Github</a> so you can see how to do Nether the right way.</p>
	<P><em>-- <a href="http://twitter.com/bobmajdakjr">@bobmajdakjr</a></em></p>
</div></div>
